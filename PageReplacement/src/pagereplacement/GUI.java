/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pagereplacement;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.concurrent.TimeUnit;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author user
 */
public class GUI extends javax.swing.JFrame {
    List<Integer> pages = new ArrayList<>();
    int frameCount = 0;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonSelectFile = new javax.swing.JButton();
        jButtonLRU = new javax.swing.JButton();
        jButtonFIFO = new javax.swing.JButton();
        jButtonOptimal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaScreen = new javax.swing.JTextArea();
        jButtonClearScreen = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabelStatus = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabelPageFaultCount = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelAlgorithmType = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldFrameCount = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabelFramesCount = new javax.swing.JLabel();
        jButtonEnterFrames = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Page Replacement");

        jLabel1.setFont(new java.awt.Font("Century Schoolbook L", 1, 24)); // NOI18N
        jLabel1.setText("Page Replacement");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonSelectFile.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonSelectFile.setText("Select File");
        jButtonSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectFile(evt);
            }
        });

        jButtonLRU.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonLRU.setText("LRU");
        jButtonLRU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButttonLRU(evt);
            }
        });

        jButtonFIFO.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonFIFO.setText("FIFO");
        jButtonFIFO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFIFO(evt);
            }
        });

        jButtonOptimal.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonOptimal.setText("Optimal");
        jButtonOptimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOptimalActionPerformed(evt);
            }
        });

        jTextAreaScreen.setEditable(false);
        jTextAreaScreen.setColumns(20);
        jTextAreaScreen.setRows(5);
        jScrollPane1.setViewportView(jTextAreaScreen);

        jButtonClearScreen.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonClearScreen.setText("Clear Screen");
        jButtonClearScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearScreenActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Status:");

        jLabelStatus.setText("Waiting");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Page Faults:");

        jLabelPageFaultCount.setText("N/A");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Algorithm:");

        jLabelAlgorithmType.setText("------------");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Frames Available:");

        jTextFieldFrameCount.setAutoscrolls(false);

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Frames Set:");

        jLabelFramesCount.setText("--");

        jButtonEnterFrames.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButtonEnterFrames.setText("Enter Frame Count");
        jButtonEnterFrames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnterFramesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldFrameCount, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPageFaultCount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonEnterFrames))
                        .addGap(20, 20, 20)))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFramesCount, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonSelectFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLRU, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFIFO, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonOptimal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonClearScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelAlgorithmType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonSelectFile)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonLRU)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFIFO)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonOptimal)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonClearScreen))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabelStatus)
                    .addComponent(jLabel3)
                    .addComponent(jLabelPageFaultCount)
                    .addComponent(jLabel5)
                    .addComponent(jLabelAlgorithmType))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jTextFieldFrameCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabelFramesCount)
                            .addComponent(jButtonEnterFrames))))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButttonLRU(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButttonLRU
        LRU lru = new LRU();
        boolean pagesLoaded = checkIfPagesLoaded();
        if (pagesLoaded) {
            if (frameCount == 0) {
                statusLabelUpdate(Status.NoFramesEntered);
            } else {
                lru.runLRU(Integer.parseInt(jTextFieldFrameCount.getText()), pages.stream().mapToInt(i -> i).toArray());
                statusLabelUpdate(Status.RunningLRU);
                jTextAreaScreen.setText("Pages Entered: " + pages.toString() + "\n" + lru.getLRUDataForDisplay());
                jLabelAlgorithmType.setText("LRU");
                jLabelPageFaultCount.setText(lru.getPageFaultCount());
            }
        }
    }//GEN-LAST:event_jButttonLRU

    private void jButtonFIFO(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFIFO
        FIFO fifo = new FIFO();
        boolean pagesLoaded = checkIfPagesLoaded();
        if (pagesLoaded) {
            if (frameCount == 0) {
                statusLabelUpdate(Status.NoFramesEntered);
            } else {
                fifo.runFIFO(Integer.parseInt(jTextFieldFrameCount.getText()), pages.stream().mapToInt(i -> i).toArray());
                statusLabelUpdate(Status.RunningFIFO);
                jTextAreaScreen.setText("Pages Entered: " + pages.toString() + "\n" + fifo.getFIFODataForDisplay());
                jLabelAlgorithmType.setText("FIFO");
                jLabelPageFaultCount.setText(fifo.getPageFaultCount());
            }
        }
    }//GEN-LAST:event_jButtonFIFO

    private void jButtonSelectFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectFile
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
	int returnValue = jfc.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            
            Scanner input;
            
            try {
                input = new Scanner(Paths.get(selectedFile.getAbsolutePath()));
                
                if (pages.size() > 0){
                    pages.clear();
                }
                while(input.hasNext()){
                    pages.add(input.nextInt());
                }
                
                displayPages();
                statusLabelUpdate(Status.FileLoaded);
            } catch (IOException ex) {
                System.out.printf("Error: %s", ex.toString());
            }
            
            
	}
        
    }//GEN-LAST:event_jButtonSelectFile

    private void jButtonClearScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearScreenActionPerformed
        jTextAreaScreen.setText("");
        statusLabelUpdate(Status.ClearedScreenWaiting);
        jTextAreaScreen.setText("");
        jLabelAlgorithmType.setText("N/A");
        displayPages();
        try {
            TimeUnit.SECONDS.sleep(1);
        } catch (InterruptedException ex) {
        }
    }//GEN-LAST:event_jButtonClearScreenActionPerformed

    private void jButtonEnterFramesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnterFramesActionPerformed
        
        if (jTextFieldFrameCount.getText().equals("")){
            statusLabelUpdate(Status.NoFramesEntered);
        }
        else{
            frameCount = Integer.parseInt(jTextFieldFrameCount.getText());
            statusLabelUpdate(Status.FramesEntered);
            jLabelFramesCount.setText(Integer.toString(frameCount));
        }
    }//GEN-LAST:event_jButtonEnterFramesActionPerformed

    private void jButtonOptimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOptimalActionPerformed
        Optimal optmial = new Optimal();
        boolean pagesLoaded = checkIfPagesLoaded();
        if (pagesLoaded) {
            if (frameCount == 0) {
                statusLabelUpdate(Status.NoFramesEntered);
            } else {
                optmial.runOptimal(Integer.parseInt(jTextFieldFrameCount.getText()), pages.stream().mapToInt(i -> i).toArray());
                statusLabelUpdate(Status.RunningOpt);
                jTextAreaScreen.setText("Pages Entered: " + pages.toString() + "\n" + optmial.getOptimalDataForDisplay());
                jLabelAlgorithmType.setText("Optimal");
                jLabelPageFaultCount.setText(optmial.getPageFaultCount());
            }
        }
    }//GEN-LAST:event_jButtonOptimalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClearScreen;
    private javax.swing.JButton jButtonEnterFrames;
    private javax.swing.JButton jButtonFIFO;
    private javax.swing.JButton jButtonLRU;
    private javax.swing.JButton jButtonOptimal;
    private javax.swing.JButton jButtonSelectFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelAlgorithmType;
    private javax.swing.JLabel jLabelFramesCount;
    private javax.swing.JLabel jLabelPageFaultCount;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaScreen;
    private javax.swing.JTextField jTextFieldFrameCount;
    // End of variables declaration//GEN-END:variables

    private void displayPages() {
        jTextAreaScreen.setText("Pages Entered: " + pages.toString()+"\n");
    }
    
    private boolean checkIfPagesLoaded(){
        if(pages.size() > 0){
            return true;
        }
        else{
            statusLabelUpdate(Status.NoPagesEntered);
            return false;
        }
    }
    
    private void statusLabelUpdate(Status status){
        switch(status){
            case FileLoaded:
                jLabelStatus.setText("File Loaded!");
                break;
            case Waiting:
                jLabelStatus.setText("Waiting.");
                break;
            case RunningLRU:
                jLabelStatus.setText("Ran LRU! Waiting.");
                break;
            case RunningOpt:
                jLabelStatus.setText("Ran Optimum! Waiting.");
                break;
            case RunningFIFO:
                jLabelStatus.setText("Ran FIFO! Waiting.");
                break;
            case ClearedScreen:
                jLabelStatus.setText("Screen Cleared!");
                break;
            case Finished:
                jLabelStatus.setText("Finished Running!");
                break;
            case ClearedScreenWaiting:
                jLabelStatus.setText("Cleared Screen! Waiting.");
                break;
            case NoFramesEntered:
                jLabelStatus.setText("Error! No frames entered!");
                break;
            case FramesEntered:
                jLabelStatus.setText("Frames Entered! Waiting.");
                break;
            case NoPagesEntered:
                jLabelStatus.setText("Error! No Pages Entered!");
                break;
                
                
        }
    }
    
    public enum Status {
    FileLoaded,
    Waiting,
    RunningLRU,
    RunningOpt,
    RunningFIFO,
    ClearedScreen,
    Finished,
    ClearedScreenWaiting,
    NoFramesEntered,
    FramesEntered,
    NoPagesEntered
}
}
